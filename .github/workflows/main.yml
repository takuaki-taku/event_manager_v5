name: CI/CD

on:
  push:
    branches: [main] # mainブランチへのプッシュで発動

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # GitHub Secretsに登録
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # GitHub Secretsに登録
          aws-region: ap-northeast-1 # AWSリージョン

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/your-repo-name:$IMAGE_TAG .
          docker push $ECR_REGISTRY/your-repo-name:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }} # GitHub Secretsに登録
          username: ubuntu # EC2のユーザー名
          key: ${{ secrets.EC2_PRIVATE_KEY }} # GitHub Secretsに登録
          script: |
            docker pull $ECR_REGISTRY/your-repo-name:$IMAGE_TAG
            docker stop your-container-name || true # コンテナが起動していない場合でもエラーにならないように|| trueを追加
            docker rm your-container-name || true # コンテナが起動していない場合でもエラーにならないように|| trueを追加
            docker run -d -p 80:5000 --name your-container-name $ECR_REGISTRY/your-repo-name:$IMAGE_TAG # ポート番号は適宜変更
